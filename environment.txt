sudo apt install git curl g++ -y

==== install gh ====
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y
====================

==== install ros noetic ====
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' \
&& curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - \
&& sudo apt update \
&& sudo apt install ros-noetic-desktop-full -y

source /opt/ros/noetic/setup.bash \
&& echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc

sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential -y \
&& sudo rosdep init \
&& rosdep update
============================

==== install boost_1.77 ====
curl -L https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.bz2 -o boost_1_77_0.tar.bz2 \
&& tar -xjf boost_1_77_0.tar.bz2 \
&& cd boost_1_77_0 \
&& ./bootstrap.sh \
&& ./b2 --with=all -j 4 install --prefix=$HOME/boost_1_77_0
============================

==== install libqi ====
git clone https://github.com/ros-naoqi/libqi \
&& cd libqi \
&& mkdir -p BUILD \
&& cd BUILD \
&& cmake .. -DQI_WITH_TESTS=OFF -DBOOST_ROOT=$HOME/boost_1_77_0 -DBoost_INCLUDE_DIR=$HOME/boost_1_77_0/include -DBoost_LIBRARY_DIR=$HOME/boost_1_77_0/lib \
&& make install DESTDIR=$HOME/libqi
=======================

==== install libqi-python ====
sudo apt install python3-pip -y \
&& pip install qibuild scikit-build toml
export PATH=$PATH:$HOME/.local/bin

git clone https://github.com/aldebaran/libqi-python.git \
&& cd libqi-python \
&& sed -i "s+'-DQIPYTHON_STANDALONE:BOOL=ON'+'-DQIPYTHON_STANDALONE:BOOL=ON', '-DBOOST_ROOT:PATH=$HOME/boost_1_77_0', '-DBoost_INCLUDE_DIR:PATH=$HOME/boost_1_77_0/include', '-DBoost_LIBRARY_DIR:PATH=$HOME/boost_1_77_0/lib'+g" setup.py \
&& python3 ./setup.py bdist_wheel -j 4 \
&& pip install dist/*.whl
==============================

==== install choregraphe ====
wget https://community-static.aldebaran.com/resources/2.8.6/choregraphe-suite-2.8.6.23-linux64-setup.run
chmod +x choregraphe-suite-2.8.6.23-linux64-setup.run
sudo ./choregraphe-suite-2.8.6.23-linux64-setup.run

cd /opt/'Softbank Robotics'/'Choregraphe Suite 2.8'/lib/
sudo mv libz.so.1 libz.so.1.old
sudo ln -s /lib/x86_64-linux-gnu/libz.so.1
=============================


==== install ros2 humble ====
https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html
=============================

sudo apt install vim
sudo apt install python3.10-venv

pip 
recordtype
numpy
matplotlib
scikit-learn







